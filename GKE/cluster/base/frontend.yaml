apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  strategy:
    # blueGreen:
    #   activeService: frontend-active
    #   autoPromotionEnabled: true
    #   previewService: frontend-preview
    canary:
      steps:
      - setWeight: 10
      - pause: {duration: 24h}
  template:
    metadata:
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: 'true'
      labels:
        app: frontend
    spec:
      containers:
      - env:
        - name: PORT
          value: '8080'
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: productcatalogservice-active:3550
        - name: CURRENCY_SERVICE_ADDR
          value: currencyservice-active:7000
        - name: CART_SERVICE_ADDR
          value: cartservice-active:7070
        - name: RECOMMENDATION_SERVICE_ADDR
          value: recommendationservice-active:8080
        - name: SHIPPING_SERVICE_ADDR
          value: shippingservice-active:50051
        - name: CHECKOUT_SERVICE_ADDR
          value: checkoutservice-active:5050
        - name: AD_SERVICE_ADDR
          value: adservice-active:9555
        - name: ENABLE_PROFILER
          value: '0'
        image: asia-docker.pkg.dev/yoondaegyoung-01-400304/gcf-artifacts/boutique-image/frontend:6fe2965
        livenessProbe:
          httpGet:
            httpHeaders:
            - name: Cookie
              value: shop_session-id=x-liveness-probe
            path: /_healthz
            port: 8080
          initialDelaySeconds: 10
        name: server
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: Cookie
              value: shop_session-id=x-readiness-probe
            path: /_healthz
            port: 8080
          initialDelaySeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      nodeSelector:
        cloud.google.com/gke-nodepool: boutique
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: boutique-sa
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-active
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "frontend-backend-config"}'
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-preview
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "frontend-backend-config"}'
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-autoscaler
spec:
  scaleTargetRef:
    apiVersion: argoproj.io/v1alpha1
    kind: Rollout
    name: frontend
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 40
