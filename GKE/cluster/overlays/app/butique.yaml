apiVersion: v1
kind: Service
metadata:
  name: adservice
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: adservice-active
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9555
  selector:
    app: adservice
---
apiVersion: v1
kind: Service
metadata:
  name: adservice-preview
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9555
  selector:
    app: adservice
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice-active
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 7070
  selector:
    app: cartservice
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice-preview
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 7070
  selector:
    app: cartservice
---
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice-active
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5050
  selector:
    app: checkoutservice
---
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice-preview
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5050
  selector:
    app: checkoutservice
---
apiVersion: v1
kind: Service
metadata:
  name: currencyservice-active
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 7000
  selector:
    app: currencyservice
---
apiVersion: v1
kind: Service
metadata:
  name: currencyservice-preview
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 7000
  selector:
    app: currencyservice
---
apiVersion: v1
kind: Service
metadata:
  name: emailservice-active
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: emailservice
---
apiVersion: v1
kind: Service
metadata:
  name: emailservice-preview
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: emailservice
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/backend-config: '{"default": "front-backend-config"}'
    cloud.google.com/neg: '{"ingress": true}'
  name: frontend
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: frontend
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-active
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: frontend
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-preview
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: frontend
---
apiVersion: v1
kind: Service
metadata:
  name: paymentservice-active
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 50051
  selector:
    app: paymentservice
---
apiVersion: v1
kind: Service
metadata:
  name: paymentservice-preview
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 50051
  selector:
    app: paymentservice
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice-active
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3550
  selector:
    app: productcatalogservice
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice-preview
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3550
  selector:
    app: productcatalogservice
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice-active
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: recommendationservice
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice-preview
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: recommendationservice
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cart-active
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 6379
  selector:
    app: redis-cart
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cart-preview
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 6379
  selector:
    app: redis-cart
---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice-active
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 50051
  selector:
    app: shippingservice
---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice-preview
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 50051
  selector:
    app: shippingservice
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: adservice
spec:
  selector:
    matchLabels:
      app: adservice
  strategy:
    blueGreen:
      activeService: ad-service-active
      autoPromotionEnabled: true
      previewService: ad-service-preview
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: asia-northeast3-docker.pkg.dev/protean-blend-398805/gcf-artifacts/my-image/adservice:47ab7d4
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      nodeSelector:
        cloud.google.com/gke-nodepool: boutique
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: cartservice
spec:
  selector:
    matchLabels:
      app: cartservice
  strategy:
    blueGreen:
      activeService: c-artservice-active
      autoPromotionEnabled: true
      previewService: c-artservice-preview
  template:
    metadata:
      labels:
        app: cartservice
    spec:
      containers:
      - env:
        - name: REDIS_ADDR
          value: redis-cart:6379
        image: asia-northeast3-docker.pkg.dev/protean-blend-398805/gcf-artifacts/my-image/cartservice:UPDATED_TAG
        livenessProbe:
          grpc:
            port: 7070
          initialDelaySeconds: 15
          periodSeconds: 10
        name: server
        ports:
        - containerPort: 7070
        readinessProbe:
          grpc:
            port: 7070
          initialDelaySeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 128Mi
          requests:
            cpu: 200m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      nodeSelector:
        cloud.google.com/gke-nodepool: boutique
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: checkoutservice
spec:
  selector:
    matchLabels:
      app: checkoutservice
  strategy:
    blueGreen:
      activeService: check-outservice-active
      autoPromotionEnabled: true
      previewService: check-outservice-preview
  template:
    metadata:
      labels:
        app: checkoutservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "5050"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: productcatalogservice:3550
        - name: SHIPPING_SERVICE_ADDR
          value: shippingservice:50051
        - name: PAYMENT_SERVICE_ADDR
          value: paymentservice:50051
        - name: EMAIL_SERVICE_ADDR
          value: emailservice:5000
        - name: CURRENCY_SERVICE_ADDR
          value: currencyservice:7000
        - name: CART_SERVICE_ADDR
          value: cartservice:7070
        image: asia-northeast3-docker.pkg.dev/protean-blend-398805/gcf-artifacts/my-image/checkoutservice:NEW_TAG_HERE
        livenessProbe:
          grpc:
            port: 5050
        name: server
        ports:
        - containerPort: 5050
        readinessProbe:
          grpc:
            port: 5050
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      nodeSelector:
        cloud.google.com/gke-nodepool: boutique
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: currencyservice
spec:
  selector:
    matchLabels:
      app: currencyservice
  strategy:
    blueGreen:
      activeService: cu-rrencyservice-active
      autoPromotionEnabled: true
      previewService: cu-rrencyservice-preview
  template:
    metadata:
      labels:
        app: currencyservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "7000"
        - name: DISABLE_PROFILER
          value: "1"
        image: asia-northeast3-docker.pkg.dev/protean-blend-398805/gcf-artifacts/my-image/cartservice:UPDATED_TAG
        livenessProbe:
          grpc:
            port: 7000
        name: server
        ports:
        - containerPort: 7000
          name: grpc
        readinessProbe:
          grpc:
            port: 7000
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      nodeSelector:
        cloud.google.com/gke-nodepool: boutique
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: emailservice
spec:
  selector:
    matchLabels:
      app: emailservice
  strategy:
    blueGreen:
      activeService: e-mailservice-active
      autoPromotionEnabled: true
      previewService: e-mailservice-preview
  template:
    metadata:
      labels:
        app: emailservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "8080"
        - name: DISABLE_PROFILER
          value: "1"
        image: asia-northeast3-docker.pkg.dev/protean-blend-398805/gcf-artifacts/my-image/emailservice:c9dd7b4
        livenessProbe:
          grpc:
            port: 8080
          periodSeconds: 5
        name: server
        ports:
        - containerPort: 8080
        readinessProbe:
          grpc:
            port: 8080
          periodSeconds: 5
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      nodeSelector:
        cloud.google.com/gke-nodepool: boutique
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: frontend
spec:
  replicas: 5
  selector:
    matchLabels:
      app: frontend
  strategy:
    blueGreen:
      activeService: front-active
      autoPromotionEnabled: true
      previewService: front-preview
  template:
    metadata:
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
      labels:
        app: frontend
    spec:
      containers:
      - env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: productcatalogservice:3550
        - name: CURRENCY_SERVICE_ADDR
          value: currencyservice:7000
        - name: CART_SERVICE_ADDR
          value: cartservice:7070
        - name: RECOMMENDATION_SERVICE_ADDR
          value: recommendationservice:8080
        - name: SHIPPING_SERVICE_ADDR
          value: shippingservice:50051
        - name: CHECKOUT_SERVICE_ADDR
          value: checkoutservice:5050
        - name: AD_SERVICE_ADDR
          value: adservice:9555
        - name: ENABLE_PROFILER
          value: "0"
        image: asia-northeast3-docker.pkg.dev/protean-blend-398805/gcf-artifacts/my-image/frontend:47ab7d4
        livenessProbe:
          httpGet:
            httpHeaders:
            - name: Cookie
              value: shop_session-id=x-liveness-probe
            path: /_healthz
            port: 8080
          initialDelaySeconds: 10
        name: serverfront
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: Cookie
              value: shop_session-id=x-readiness-probe
            path: /_healthz
            port: 8080
          initialDelaySeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      nodeSelector:
        cloud.google.com/gke-nodepool: boutique
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: paymentservice
spec:
  selector:
    matchLabels:
      app: paymentservice
  strategy:
    blueGreen:
      activeService: pay-mentservice-active
      autoPromotionEnabled: true
      previewService: pay-mentservice-preview
  template:
    metadata:
      labels:
        app: paymentservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "50051"
        - name: DISABLE_PROFILER
          value: "1"
        image: asia-northeast3-docker.pkg.dev/protean-blend-398805/gcf-artifacts/my-image/paymentservice:NEW_TAG_HERE
        livenessProbe:
          grpc:
            port: 50051
        name: server
        ports:
        - containerPort: 50051
        readinessProbe:
          grpc:
            port: 50051
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      nodeSelector:
        cloud.google.com/gke-nodepool: boutique
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: productcatalogservice
spec:
  selector:
    matchLabels:
      app: productcatalogservice
  strategy:
    blueGreen:
      activeService: product-catalogservice-active
      autoPromotionEnabled: true
      previewService: product-catalogservice-preview
  template:
    metadata:
      labels:
        app: productcatalogservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "3550"
        - name: DISABLE_PROFILER
          value: "1"
        image: asia-northeast3-docker.pkg.dev/protean-blend-398805/gcf-artifacts/my-image/productcatalogservice:NEW_TAG_HERE
        livenessProbe:
          grpc:
            port: 3550
        name: server
        ports:
        - containerPort: 3550
        readinessProbe:
          grpc:
            port: 3550
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      nodeSelector:
        cloud.google.com/gke-nodepool: boutique
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: recommendationservice
spec:
  selector:
    matchLabels:
      app: recommendationservice
  strategy:
    blueGreen:
      activeService: recommen-dationservice-active
      autoPromotionEnabled: true
      previewService: recommen-dationservice-preview
  template:
    metadata:
      labels:
        app: recommendationservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: productcatalogservice:3550
        - name: DISABLE_PROFILER
          value: "1"
        image: asia-northeast3-docker.pkg.dev/protean-blend-398805/gcf-artifacts/my-image/recommendationservice:c9dd7b4
        livenessProbe:
          grpc:
            port: 8080
          periodSeconds: 5
        name: server
        ports:
        - containerPort: 8080
        readinessProbe:
          grpc:
            port: 8080
          periodSeconds: 5
        resources:
          limits:
            cpu: 200m
            memory: 450Mi
          requests:
            cpu: 100m
            memory: 220Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      nodeSelector:
        cloud.google.com/gke-nodepool: boutique
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: redis-cart
spec:
  selector:
    matchLabels:
      app: redis-cart
  strategy:
    blueGreen:
      activeService: redis-cart-active
      autoPromotionEnabled: true
      previewService: redis-cart-preview
  template:
    metadata:
      labels:
        app: redis-cart
    spec:
      containers:
      - image: redis:alpine
        livenessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        name: redis
        ports:
        - containerPort: 6379
        readinessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        resources:
          limits:
            cpu: 125m
            memory: 256Mi
          requests:
            cpu: 70m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /data
          name: redis-data
      nodeSelector:
        cloud.google.com/gke-nodepool: boutique
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
      - emptyDir: {}
        name: redis-data
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: shippingservice
spec:
  selector:
    matchLabels:
      app: shippingservice
  strategy:
    blueGreen:
      activeService: ship-pingservice-active
      autoPromotionEnabled: true
      previewService: ship-pingservice-preview
  template:
    metadata:
      labels:
        app: shippingservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "50051"
        - name: DISABLE_PROFILER
          value: "1"
        image: asia-northeast3-docker.pkg.dev/protean-blend-398805/gcf-artifacts/my-image/shippingservice:c9dd7b4
        livenessProbe:
          grpc:
            port: 50051
        name: server
        ports:
        - containerPort: 50051
        readinessProbe:
          grpc:
            port: 50051
          periodSeconds: 5
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      nodeSelector:
        cloud.google.com/gke-nodepool: boutique
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: frontend-backend-config
spec:
  securityPolicy:
    name: boutique-security-policy
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: boutique-certificate
spec:
  domains:
  - www.2280.store
  - 2280.store
---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: frontend-frontend-config
spec:
  redirectToHttps:
    enabled: true
    responseCodeName: ""
  sslPolicy: boutique-ssl-policy
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.global-static-ip-name: boutique-ip
    networking.gke.io/managed-certificates: boutique-certificate
    networking.gke.io/v1beta1.FrontendConfig: frontend-frontend-config
  name: frontend-ingress
spec:
  defaultBackend:
    service:
      name: frontend
      port:
        number: 80
  rules:
  - host: www.2280.store
    http:
      paths:
      - backend:
          service:
            name: frontend
            port:
              number: 80
        path: /
        pathType: Prefix
